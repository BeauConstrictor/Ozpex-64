Sections:
00: "org0001:8003" (8003-80E6)


Source: "programs/editor.asm"
                        	     1:   .org $8003
                        	     2: 
                        	     3: SERIAL   = $8002
                        	     4: CLEAR    =   $11
                        	     5: DELETE   =   $7f
                        	     6: NEWLINE  =   $0a
                        	     7: ESCAPE   =   $1b
                        	     8: 
                        	     9: SLOT2    = $a003
                        	    10: SLOT2END = $c002
                        	    11: 
                        	    12: ; memory allocation:
                        	    13: BUFPTR =   $20        ; 1 byte
                        	    14: BUFFER = $0201        ; 256 bytes
                        	    15: 
00:8003 203D80          	    16:   jsr init
00:8006 207980          	    17:   jsr load_buffer
00:8009 203180          	    18:   jsr redraw
                        	    19: main:
00:800C AD0280          	    20:   lda SERIAL
00:800F F0FB            	    21:   beq main
                        	    22: 
00:8011 C91B            	    23:   cmp #ESCAPE
00:8013 F013            	    24:   beq escape
                        	    25: 
00:8015 204280          	    26:   jsr write_char
                        	    27: 
                        	    28:   ; if a backspace is pressed, redraw the entire screen
00:8018 C97F            	    29:   cmp #DELETE
00:801A F006            	    30:   beq mainloop_redraw
                        	    31: 
                        	    32:   ; else, just draw the new character
00:801C 8D0280          	    33:   sta SERIAL
                        	    34: 
00:801F 4C0C80          	    35:   jmp main
                        	    36: 
                        	    37: mainloop_redraw:
00:8022 203180          	    38:   jsr redraw
00:8025 4C0C80          	    39:   jmp main
                        	    40: 
                        	    41: escape:
00:8028 206680          	    42:   jsr save_buffer
                        	    43: 
00:802B A90A            	    44:   lda #NEWLINE
00:802D 8D0280          	    45:   sta SERIAL
                        	    46: 
00:8030 60              	    47:   rts
                        	    48: 
                        	    49: ; clear & draw the screen contents
                        	    50: ; modifies: a, x
                        	    51: redraw:
00:8031 A911            	    52:   lda #CLEAR
00:8033 8D0280          	    53:   sta SERIAL
00:8036 209180          	    54:   jsr print_message
00:8039 205880          	    55:   jsr print_buffer
00:803C 60              	    56:   rts
                        	    57: 
                        	    58: ; initialise memory
                        	    59: init:
00:803D A900            	    60:   lda #0
00:803F 8520            	    61:   sta BUFPTR
00:8041 60              	    62:   rts
                        	    63: 
                        	    64: ; append the character in the a register to the text buffer
                        	    65: ; modifies: x
                        	    66: write_char;
00:8042 C97F            	    67:   cmp #DELETE
00:8044 F009            	    68:   beq _write_char_delete
                        	    69: 
00:8046 A620            	    70:   ldx BUFPTR
00:8048 E8              	    71:   inx
00:8049 9D0102          	    72:   sta BUFFER,x
00:804C E620            	    73:   inc BUFPTR
00:804E 60              	    74:   rts
                        	    75: _write_char_delete:
                        	    76:   ; if the buffer is empty, don't let it wrap
00:804F C620            	    77:   dec BUFPTR
00:8051 C900            	    78:   cmp #$00
00:8053 D002            	    79:   bne _write_char_delete_done
00:8055 E620            	    80:   inc BUFPTR
                        	    81: _write_char_delete_done:
00:8057 60              	    82:   rts
                        	    83: 
                        	    84: ; display the contents of the text buffer
                        	    85: ; modifies: a, x
                        	    86: print_buffer:
                        	    87:   ; will immediately wrap because of the increment
00:8058 A2FF            	    88:   ldx #$ff
                        	    89: _print_buffer_loop:
00:805A E8              	    90:   inx
00:805B BD0102          	    91:   lda BUFFER,x
00:805E 8D0280          	    92:   sta SERIAL
                        	    93: 
                        	    94:   ; print up to the end of the buffer
00:8061 E420            	    95:   cpx BUFPTR
00:8063 D0F5            	    96:   bne _print_buffer_loop
00:8065 60              	    97:   rts
                        	    98: 
                        	    99: ; write the contents of slot to to the text buffer
                        	   100: ; modifies: a, x
                        	   101: save_buffer:
                        	   102:   ; will immediately wrap because of the increment
00:8066 A2FF            	   103:   ldx #$ff
                        	   104: _save_buffer_loop:
00:8068 E8              	   105:   inx
                        	   106: 
00:8069 BD0102          	   107:   lda BUFFER,x
00:806C 9D03A0          	   108:   sta SLOT2,x
                        	   109: 
00:806F A520            	   110:   lda BUFPTR
00:8071 8D02C0          	   111:   sta SLOT2END
                        	   112: 
00:8074 E420            	   113:   cpx BUFPTR
00:8076 D0F0            	   114:   bne _save_buffer_loop
00:8078 60              	   115:   rts
                        	   116: 
                        	   117: ; write the contents of the text buffer to slot 2
                        	   118: ; modifies: a, x
                        	   119: load_buffer:
00:8079 AD02C0          	   120:   lda SLOT2END
00:807C 8520            	   121:   sta BUFPTR
                        	   122: 
                        	   123:   ; will immediately wrap because of the increment
00:807E A2FF            	   124:   ldx #$ff
                        	   125: _load_buffer_loop:
00:8080 E8              	   126:   inx
                        	   127: 
00:8081 BD03A0          	   128:   lda SLOT2,x
00:8084 9D0102          	   129:   sta BUFFER,x
                        	   130: 
00:8087 A520            	   131:   lda BUFPTR
00:8089 8D02C0          	   132:   sta SLOT2END
                        	   133: 
00:808C E420            	   134:   cpx BUFPTR
00:808E D0F0            	   135:   bne _load_buffer_loop
00:8090 60              	   136:   rts
                        	   137: 
                        	   138: ; print the title message
                        	   139: ; modifies: a, x
                        	   140: print_message:
00:8091 A200            	   141:   ldx #0
                        	   142: _print_loop:
00:8093 BDA080          	   143:   lda message,x
00:8096 F007            	   144:   beq _print_done
00:8098 8D0280          	   145:   sta SERIAL
00:809B E8              	   146:   inx
00:809C 4C9380          	   147:   jmp _print_loop
                        	   148: _print_done:
00:809F 60              	   149:   rts
                        	   150: 
                        	   151: message:
00:80A0 1B              	   152:   .byte ESCAPE, "[7m"
00:80A1 5B376D
00:80A4 204F363420456469	   153:   .byte " O64 Editor v1.0.0 "
00:80AC 746F722076312E30
00:80B4 2E3020
00:80B7 1B              	   154:   .byte ESCAPE, "[0m", NEWLINE
00:80B8 5B306D
00:80BB 0A
00:80BC 5449503A20707265	   155:   .byte "TIP: press ESC to save to CS2 and quit.", NEWLINE, NEWLINE, 0
00:80C4 7373204553432074
00:80CC 6F20736176652074
00:80D4 6F2043533220616E
00:80DC 6420717569742E
00:80E3 0A
00:80E4 0A
00:80E5 00


Symbols by name:
BUFFER                           E:0201
BUFPTR                           E:0020
CLEAR                            E:0011
DELETE                           E:007F
ESCAPE                           E:001B
NEWLINE                          E:000A
SERIAL                           E:8002
SLOT2                            E:A003
SLOT2END                         E:C002
_load_buffer_loop                A:8080
_print_buffer_loop               A:805A
_print_done                      A:809F
_print_loop                      A:8093
_save_buffer_loop                A:8068
_write_char_delete               A:804F
_write_char_delete_done          A:8057
escape                           A:8028
init                             A:803D
load_buffer                      A:8079
main                             A:800C
mainloop_redraw                  A:8022
message                          A:80A0
print_buffer                     A:8058
print_message                    A:8091
redraw                           A:8031
save_buffer                      A:8066
write_char                       A:8042

Symbols by value:
000A NEWLINE
0011 CLEAR
001B ESCAPE
0020 BUFPTR
007F DELETE
0201 BUFFER
8002 SERIAL
800C main
8022 mainloop_redraw
8028 escape
8031 redraw
803D init
8042 write_char
804F _write_char_delete
8057 _write_char_delete_done
8058 print_buffer
805A _print_buffer_loop
8066 save_buffer
8068 _save_buffer_loop
8079 load_buffer
8080 _load_buffer_loop
8091 print_message
8093 _print_loop
809F _print_done
80A0 message
A003 SLOT2
C002 SLOT2END
